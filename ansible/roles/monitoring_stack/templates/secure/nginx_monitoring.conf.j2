server {
    listen 80;
    server_name {{ hostname_mt }};
    return 301 https://$host$request_uri;
}
server {
    listen 443 ssl;
    server_name {{ hostname_mt }};

    ssl_certificate /etc/ssl/certs/{{ hostname_mt }}.crt;
    ssl_certificate_key /etc/ssl/private/{{ hostname_mt }}.key;
    ssl_client_certificate /etc/ssl/ca/ca.crt;
    ssl_verify_client optional;

    auth_basic $auth_type;
    auth_basic_user_file /etc/nginx/htpasswd;

    location /prometheus/ {
        proxy_pass http://127.0.0.1:9090/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect / /prometheus/;
        proxy_redirect /graph /prometheus/graph;
        proxy_redirect /query /prometheus/query;
        proxy_set_header Accept-Encoding "";
        proxy_http_version 1.1;
        proxy_intercept_errors off;
    }

    location /alertmanager/ {
        proxy_pass http://127.0.0.1:9093/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /node-exporter/ {
        proxy_pass http://127.0.0.1:9100/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location / {
        proxy_pass http://127.0.0.1:3000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}