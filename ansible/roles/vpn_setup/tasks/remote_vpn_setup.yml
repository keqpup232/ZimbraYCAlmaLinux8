---
- name: Read client private key from localhost
  slurp:
    src: ./config/wg_keys/private_client.key
  register: client_private_key_file
  delegate_to: localhost
  become: false

- name: Read server public key from localhost
  slurp:
    src: ./config/wg_keys/public_server.key
  register: server_public_key_file
  delegate_to: localhost
  become: false

- name: Generate client config on remote host
  template:
    src: wg0_client.conf.j2
    dest: /etc/wireguard/wg0.conf
    mode: '0600'
  vars:
    key_client_private: "{{ client_private_key_file.content | b64decode }}"
    key_server_public: "{{ server_public_key_file.content | b64decode }}"

- name: Enable IP forwarding
  lineinfile:
    path: /etc/sysctl.conf
    line: "net.ipv4.ip_forward=1"
    state: present

- name: Apply sysctl settings
  command: sysctl -p

- name: Enable and start WireGuard
  systemd:
    name: wg-quick@wg0
    enabled: yes
    state: restarted
    daemon_reload: yes
  register: wg_service

- name: Wait for WireGuard to initialize (15 seconds)
  wait_for:
    timeout: 15
  when: wg_service is changed

- name: Verify WireGuard service status
  command: systemctl status wg-quick@wg0
  register: wg_status
  changed_when: false
  failed_when: false

- name: Check WireGuard interface
  command: wg show wg0
  register: wg_show
  changed_when: false
  failed_when: false

- name: Test SMTP connectivity with netcat
  command: nc -zv -w 5 smtp.gmail.com 25
  register: smtp_test
  ignore_errors: yes
  changed_when: false

- name: Test VPN connectivity
  command: ping -c 3 10.13.13.1
  register: ping_test
  ignore_errors: yes
  changed_when: false

- name: Show all test results
  debug:
    msg: |
      WireGuard status:
      {{ wg_status.stdout_lines | to_nice_json }}
      
      WireGuard interface:
      {{ wg_show.stdout_lines | to_nice_json }}
      
      SMTP test:
      {% if smtp_test is success %}Success{% else %}Failed{% endif %}
      
      PING test:
      {{ ping_test.stdout_lines | to_nice_json }}